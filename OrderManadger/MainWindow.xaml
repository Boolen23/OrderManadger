<Window x:Class="OrderManadger.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OrderManadger"
        xmlns:conv="clr-namespace:OrderManadger.Converters"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:vm ="clr-namespace:OrderManadger.ViewModel"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary Source="MainDictionary.xaml"/>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <StackPanel>
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <ComboBox Width="85" SelectedIndex="{Binding CurrentStatus, Mode=TwoWay, Converter={StaticResource Adapter}}">
                    <ComboBoxItem>Сделать</ComboBoxItem>
                    <ComboBoxItem>В обработке</ComboBoxItem>
                    <ComboBoxItem>Завершено</ComboBoxItem>
                </ComboBox>
                <DatePicker SelectedDate="{Binding Date, Mode=TwoWay}" Margin="2,0,0,0" >
                    <DatePicker.Resources>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <Trigger Property="Name" Value="PART_Watermark">
                                    <Setter Property="ContentControl.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text=""/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <Button Command="{Binding AddOrderCommand}" Margin="2,0,0,0" Width="17" Height="17" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Button.Template>
                        <ControlTemplate>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Ellipse.Fill" TargetName="ell" Value="#0000FF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                            <Grid Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=Button, AncestorLevel=1}}" Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=Button, AncestorLevel=1}}">
                                <Ellipse Fill="#00BFFF" Name="ell"/>
                                <Path Name="path" Data="M0.5,0 L0.5,1 M0,0.5 L1,0.5"  StrokeThickness="2.5"  Stretch="Fill"     Stroke="#98FF98" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Command="{Binding ResetEntryCommand}" Margin="2,0,0,0" Width="17" Height="17">
                    <Button.Template>
                        <ControlTemplate>
                                <Path Name="delPath" Data="M7.1999998,0L16,8.7999997 24.799999,0 32,7.1999998 23.2,16 32,24.799999 24.799999,32 16,23.2 7.1999998,32 0,24.799999 8.7999997,16 0,7.1999998z"   Stretch="Uniform" Fill="Red"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Path.Stroke" TargetName="delPath" Value="#8B0000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Margin="2,0,0,0" Content="{Binding EntryToUpdate, Converter={StaticResource EntryToText}}"  Width="100" Command="{Binding NewEntryCommand}"/>
                <Button Command="{Binding SaveCommand}" Width="200" Content="save"/>
            </StackPanel>
            <ContentPresenter Content="{Binding NewOrderList}" ContentTemplate="{StaticResource OrdersTemplate}"/>
            <TextBox TextWrapping="Wrap" AcceptsReturn="True" SpellCheck.IsEnabled="True" Text="{Binding Comment, Mode=TwoWay}"/>
        </StackPanel>
        <ListBox Name="MainBase" ItemsSource="{Binding Base}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemTemplate>
                <ItemContainerTemplate>
                    <StackPanel Width="{Binding Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Background="{Binding status, Converter={StaticResource StatusToBrush}, Mode=OneWay}">
                        <TextBlock HorizontalAlignment="Center" Text="{Binding Orders, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Orders, Converter={StaticResource TextVisibility}}"/>
                        <TextBlock HorizontalAlignment="Center" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Comment, Converter={StaticResource TextVisibility}}"/>
                        <TextBlock HorizontalAlignment="Center" Text="{Binding Date, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </ItemContainerTemplate>
            </ListBox.ItemTemplate>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick" >
                    <i:InvokeCommandAction Command="{Binding UpdateEntryCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox }, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Удалить запись" Command="{Binding DeleteEntryCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>
    </StackPanel>
</Window>
